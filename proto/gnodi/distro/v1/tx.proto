syntax = "proto3";

package gnodi.distro.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gnodi/distro/v1/params.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/gnodi-network/gnodi/x/distro/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // Mint defines the Mint RPC.
  rpc Mint(MsgMint) returns (MsgMintResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "gnodi/x/distro/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgMint defines the MsgMint message.
message MsgMint {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "gnodi/x/distro/MsgMint";
  uint64 amount = 1;
  string signer = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgMintResponse defines the MsgMintResponse message.
message MsgMintResponse {}
